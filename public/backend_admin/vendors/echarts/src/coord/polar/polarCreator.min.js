define(function(b){var h=b("./Polar");var a=b("../../util/number");var d=b("../../coord/axisHelper");var f=d.niceScaleExtent;b("./PolarModel");function c(n,o){var j=n.get("center");var p=n.get("radius");var k=o.getWidth();var q=o.getHeight();var m=a.parsePercent;this.cx=m(j[0],k);this.cy=m(j[1],q);var l=this.getRadiusAxis();var r=Math.min(k,q)/2;l.setExtent(0,m(p,r))}function e(j,m){var p=this;var k=p.getAngleAxis();var n=p.getRadiusAxis();k.scale.setExtent(Infinity,-Infinity);n.scale.setExtent(Infinity,-Infinity);j.eachSeries(function(q){if(q.coordinateSystem===p){var r=q.getData();n.scale.unionExtent(r.getDataExtent("radius",n.type!=="category"));k.scale.unionExtent(r.getDataExtent("angle",k.type!=="category"))}});f(k,k.model);f(n,n.model);if(k.type==="category"&&!k.onBand){var l=k.getExtent();var o=360/k.scale.count();k.inverse?(l[1]+=o):(l[1]-=o);k.setExtent(l[0],l[1])}}function g(l,k){l.type=k.get("type");l.scale=d.createScaleByModel(k);l.onBand=k.get("boundaryGap")&&l.type==="category";if(k.mainType==="angleAxis"){var j=k.get("startAngle");l.inverse=k.get("inverse")^k.get("clockwise");l.setExtent(j,j+(l.inverse?-360:360))}k.axis=l;l.model=k}var i={dimensions:h.prototype.dimensions,create:function(j,k){var l=[];j.eachComponent("polar",function(p,m){var s=new h(m);s.resize=c;s.update=e;var r=s.getRadiusAxis();var o=s.getAngleAxis();var q=p.findAxisModel("radiusAxis");var n=p.findAxisModel("angleAxis");g(r,q);g(o,n);s.resize(p,k);l.push(s);p.coordinateSystem=s});j.eachSeries(function(m){if(m.get("coordinateSystem")==="polar"){m.coordinateSystem=l[m.get("polarIndex")]}});return l}};b("../../CoordinateSystem").register("polar",i)});