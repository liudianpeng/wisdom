define(function(b){var a=b("zrender/core/util");var c=b("./Cartesian");function d(e){c.call(this,e)}d.prototype={constructor:d,type:"cartesian2d",dimensions:["x","y"],getBaseAxis:function(){return this.getAxesByScale("ordinal")[0]||this.getAxesByScale("time")[0]||this.getAxis("x")},containPoint:function(e){var g=this.getAxis("x");var f=this.getAxis("y");return g.contain(g.toLocalCoord(e[0]))&&f.contain(f.toLocalCoord(e[1]))},containData:function(e){return this.getAxis("x").containData(e[0])&&this.getAxis("y").containData(e[1])},dataToPoints:function(f,e){return f.mapArray(["x","y"],function(g,h){return this.dataToPoint([g,h])},e,this)},dataToPoint:function(g,h){var f=this.getAxis("x");var e=this.getAxis("y");return[f.toGlobalCoord(f.dataToCoord(g[0],h)),e.toGlobalCoord(e.dataToCoord(g[1],h))]},pointToData:function(e,h){var g=this.getAxis("x");var f=this.getAxis("y");return[g.coordToData(g.toLocalCoord(e[0]),h),f.coordToData(f.toLocalCoord(e[1]),h)]},getOtherAxis:function(e){return this.getAxis(e.dim==="x"?"y":"x")}};a.inherits(d,c);return d});