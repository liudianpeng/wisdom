define(function(d){var a=d("zrender/core/util");var c=d("../../util/number");function e(h,j){if(!a.isArray(h)){h=[h]}var i=h[0];var f=[];i.eachNode(function(n){var o={size:0,subGroups:[],node:n};f.push(o)});a.each(h,function(n){n.eachEdge(function(p){var o=f[p.node1.dataIndex];o.size+=p.getValue("value")||0;o.subGroups.push({size:p.getValue("value"),edge:p})})});var k=a.reduce(f,function(o,n){return o+n.size},0);if(j.sort&&j.sort!="none"){f.sort(b);if(j.sort==="descending"){f.revert()}}var m=(Math.PI*2-j.padding*i.data.count())/k;var l=j.startAngle*Math.PI/180;var g=j.clockwise?-1:1;a.each(f,function(o){if(j.sortSub&&j.sortSub!="none"){o.subGroups.sort(b);if(j.sortSub==="descending"){o.subGroups.revert()}}var n=l+g*o.size*m;o.node.setLayout({startAngle:-l,endAngle:-n,cx:j.cx,cy:j.cy,r0:j.r0,r:j.r,clockwise:j.clockwise});a.each(o.subGroups,function(s){var q=l;var p=l+g*s.size*m;var r=s.edge.getLayout()||{cx:j.cx,cy:j.cy,r:j.r0,clockwise:j.clockwise};r.startAngle=-q;r.endAngle=-p;s.edge.setLayout(r);l=p});l=n+g*j.padding})}var b=function(g,f){return g.size-f.size};return function(f,g){f.eachSeriesByType("chord",function(n){var m=n.getGraph();var i=n.get("center");var h=n.get("radius");var l=c.parsePercent;var k=g.getWidth();var j=g.getHeight();var o=Math.min(k,j)/2;e(m,{sort:n.get("sort"),sortSub:n.get("sortSub"),padding:n.get("padding"),startAngle:n.get("startAngle"),clockwise:n.get("clockwise"),cx:l(i[0],k),cy:l(i[1],j),r0:l(h[0],o),r:l(h[1],o)})})}});