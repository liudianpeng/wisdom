define(function(b){var f=b("./forceHelper");var a=b("../../util/number");var e=b("./simpleLayoutHelper");var d=b("./circularLayoutHelper");var c=b("zrender/core/vector");return function(g,h){g.eachSeriesByType("graph",function(u){var o=u.coordinateSystem;if(o&&o.type!=="view"){return}if(u.get("layout")==="force"){var p=u.preservedPoints||{};var x=u.getGraph();var j=x.data;var t=x.edgeData;var r=u.getModel("force");var s=r.get("initLayout");if(u.preservedPoints){j.each(function(y){var z=j.getId(y);j.setItemLayout(y,p[z]||[NaN,NaN])})}else{if(!s||s==="none"){e(u)}else{if(s==="circular"){d(u)}}}var m=j.getDataExtent("value");var w=r.get("repulsion");var l=r.get("edgeLength");var i=j.mapArray("value",function(B,z){var y=j.getItemLayout(z);var A=a.linearMap(B,m,[0,w])||(w/2);return{w:A,rep:A,p:(!y||isNaN(y[0])||isNaN(y[1]))?null:y}});var n=t.mapArray("value",function(A,y){var z=x.getEdgeByIndex(y);return{n1:i[z.node1.dataIndex],n2:i[z.node2.dataIndex],d:l,curveness:z.getModel().get("lineStyle.normal.curveness")||0}});var o=u.coordinateSystem;var v=o.getBoundingRect();var q=f(i,n,{rect:v,gravity:r.get("gravity")});var k=q.step;q.step=function(y){for(var A=0,z=i.length;A<z;A++){if(i[A].fixed){c.copy(i[A].p,x.getNodeByIndex(A).getLayout())}}k(function(C,E,B){for(var F=0,D=C.length;F<D;F++){if(!C[F].fixed){x.getNodeByIndex(F).setLayout(C[F].p)}p[j.getId(F)]=C[F].p}for(var F=0,D=E.length;F<D;F++){var G=E[F];var J=G.n1.p;var I=G.n2.p;var H=[J,I];if(G.curveness>0){H.push([(J[0]+I[0])/2-(J[1]-I[1])*G.curveness,(J[1]+I[1])/2-(I[0]-J[0])*G.curveness])}x.getEdgeByIndex(F).setLayout(H)}y&&y(B)})};u.forceLayout=q;u.preservedPoints=p;q.step()}else{u.forceLayout=null}})}});