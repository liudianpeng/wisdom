define(function(b){var a=b("zrender/core/curve");var e=b("zrender/core/vector");var j=[];var h=[];var g=[];var d=a.quadraticAt;var c=e.distSquare;var f=Math.abs;function i(m,k,q){var y=m[0];var x=m[1];var u=m[2];var r=Infinity;var z;var p=q*q;var l=0.1;for(var w=0.1;w<=0.9;w+=0.1){j[0]=d(y[0],x[0],u[0],w);j[1]=d(y[1],x[1],u[1],w);var s=f(c(j,k)-p);if(s<r){r=s;z=w}}for(var n=0;n<32;n++){var o=z+l;h[0]=d(y[0],x[0],u[0],z);h[1]=d(y[1],x[1],u[1],z);g[0]=d(y[0],x[0],u[0],o);g[1]=d(y[1],x[1],u[1],o);var s=c(h,k)-p;if(f(s)<0.01){break}var v=c(g,k)-p;l/=2;if(s<0){if(v>=0){z=z+l}else{z=z-l}}else{if(v>=0){z=z-l}else{z=z+l}}}return z}return function(n,q){var m=[];var o=a.quadraticSubdivide;var p=[[],[],[]];var l=[[],[]];var k=[];q/=2;n.eachEdge(function(w){var x=w.getLayout();var u=w.getVisual("fromSymbol");var s=w.getVisual("toSymbol");if(!x.__original){x.__original=[e.clone(x[0]),e.clone(x[1])];if(x[2]){x.__original.push(e.clone(x[2]))}}var r=x.__original;if(x[2]!=null){e.copy(p[0],r[0]);e.copy(p[1],r[2]);e.copy(p[2],r[1]);if(u&&u!="none"){var v=i(p,r[0],w.node1.getVisual("symbolSize")*q);o(p[0][0],p[1][0],p[2][0],v,m);p[0][0]=m[3];p[1][0]=m[4];o(p[0][1],p[1][1],p[2][1],v,m);p[0][1]=m[3];p[1][1]=m[4]}if(s&&s!="none"){var v=i(p,r[1],w.node2.getVisual("symbolSize")*q);o(p[0][0],p[1][0],p[2][0],v,m);p[1][0]=m[1];p[2][0]=m[2];o(p[0][1],p[1][1],p[2][1],v,m);p[1][1]=m[1];p[2][1]=m[2]}e.copy(x[0],p[0]);e.copy(x[1],p[2]);e.copy(x[2],p[1])}else{e.copy(l[0],r[0]);e.copy(l[1],r[1]);e.sub(k,l[1],l[0]);e.normalize(k,k);if(u&&u!="none"){e.scaleAndAdd(l[0],l[0],k,w.node1.getVisual("symbolSize")*q)}if(s&&s!="none"){e.scaleAndAdd(l[1],l[1],k,-w.node2.getVisual("symbolSize")*q)}e.copy(x[0],l[0]);e.copy(x[1],l[1])}})}});