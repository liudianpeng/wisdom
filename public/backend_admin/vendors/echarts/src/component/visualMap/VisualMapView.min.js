define(function(c){var e=c("../../echarts");var a=c("zrender/core/util");var g=c("../../util/graphic");var b=c("../../util/format");var d=c("../../util/layout");var f=c("../../visual/VisualMapping");return e.extendComponentView({type:"visualMap",autoPositionValues:{left:1,right:1,top:1,bottom:1},init:function(h,i){this.ecModel=h;this.api=i;this.visualMapModel;this._updatableShapes={}},render:function(i,h,j,k){this.visualMapModel=i;if(i.get("show")===false){this.group.removeAll();return}this.doRender.apply(this,arguments)},renderBackground:function(k){var h=this.visualMapModel;var j=b.normalizeCssArray(h.get("padding")||0);var i=k.getBoundingRect();k.add(new g.Rect({z2:-1,silent:true,shape:{x:i.x-j[3],y:i.y-j[0],width:i.width+j[3]+j[1],height:i.height+j[0]+j[2]},style:{fill:h.get("backgroundColor"),stroke:h.get("borderColor"),lineWidth:h.get("borderWidth")}}))},getControllerVisual:function(n,k,h){h=h||{};var j=h.forceState;var r=this.visualMapModel;var p={};if(k==="symbol"){p.symbol=r.get("itemSymbol")}if(k==="color"){var l=r.get("contentColor");p.color=l}function q(s){return p[s]}function m(s,t){p[s]=t}var o=r.controllerVisuals[j||r.getValueState(n)];var i=f.prepareVisualTypes(o);a.each(i,function(t){var s=o[t];if(h.convertOpacityToAlpha&&t==="opacity"){t="colorAlpha";s=o.__alphaForOpacity}if(f.dependsOn(t,k)){s&&s.applyVisual(n,q,m)}});return p[k]},positionGroup:function(j){var h=this.visualMapModel;var i=this.api;d.positionGroup(j,h.getBoxLayoutParams(),{width:i.getWidth(),height:i.getHeight()})},doRender:a.noop})});