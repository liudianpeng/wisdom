define(function(e){var h=e("zrender/core/util");var j=h.each;var c="\0__link_datas";var g="\0__link_mainData";function m(p){var o=p.mainData;var n=p.datas;if(!n){n={main:o};p.datasAttr={main:"data"}}p.datas=p.mainData=null;f(o,n,p);j(n,function(q){j(o.TRANSFERABLE_METHODS,function(r){q.wrapMethod(r,h.curry(d,p))})});o.wrapMethod("cloneShallow",h.curry(k,p));j(o.CHANGABLE_METHODS,function(q){o.wrapMethod(q,h.curry(l,p))});h.assert(n[o.dataType]===o)}function d(p,o){if(a(this)){var n=h.extend({},this[c]);n[this.dataType]=o;f(o,n,p)}else{b(o,this.dataType,this[g],p)}return o}function l(o,n){o.struct&&o.struct.update(this);return n}function k(o,n){j(n[c],function(q,p){q!==n&&b(q.cloneShallow(),p,n,o)});return n}function i(o){var n=this[g];return(o==null||n==null)?n:n[c][o]}function a(n){return n[g]===n}function f(o,n,p){o[c]={};j(n,function(r,q){b(r,q,o,p)})}function b(q,o,n,p){n[c][o]=q;q[g]=n;q.dataType=o;if(p.struct){q[p.structAttr]=p.struct;p.struct[p.datasAttr[o]]=q}q.getLinkedData=i}return m});