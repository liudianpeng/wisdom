describe("Line controller tests",function(){beforeEach(function(){window.addDefaultMatchers(jasmine)});afterEach(function(){window.releaseAllCharts()});it("should be constructed",function(){var a=window.acquireChart({type:"line",data:{datasets:[{data:[]}],labels:[]}});var b=a.getDatasetMeta(0);expect(b.type).toBe("line");expect(b.controller).not.toBe(undefined);expect(b.controller.index).toBe(0);expect(b.data).toEqual([]);b.controller.updateIndex(1);expect(b.controller.index).toBe(1)});it("Should use the first scale IDs if the dataset does not specify them",function(){var a=window.acquireChart({type:"line",data:{datasets:[{data:[]}],labels:[]},options:{scales:{xAxes:[{id:"firstXScaleID"}],yAxes:[{id:"firstYScaleID"}]}}});var b=a.getDatasetMeta(0);expect(b.xAxisID).toBe("firstXScaleID");expect(b.yAxisID).toBe("firstYScaleID")});it("Should create line elements and point elements for each data item during initialization",function(){var a=window.acquireChart({type:"line",data:{datasets:[{data:[10,15,0,-4],label:"dataset1"}],labels:["label1","label2","label3","label4"]}});var b=a.getDatasetMeta(0);expect(b.data.length).toBe(4);expect(b.data[0] instanceof Chart.elements.Point).toBe(true);expect(b.data[1] instanceof Chart.elements.Point).toBe(true);expect(b.data[2] instanceof Chart.elements.Point).toBe(true);expect(b.data[3] instanceof Chart.elements.Point).toBe(true);expect(b.dataset instanceof Chart.elements.Line).toBe(true)});it("should draw all elements",function(){var a=window.acquireChart({type:"line",data:{datasets:[{data:[10,15,0,-4],label:"dataset1"}],labels:["label1","label2","label3","label4"]},options:{showLines:true}});var b=a.getDatasetMeta(0);spyOn(b.dataset,"draw");spyOn(b.data[0],"draw");spyOn(b.data[1],"draw");spyOn(b.data[2],"draw");spyOn(b.data[3],"draw");a.update();expect(b.data[0].draw.calls.count()).toBe(1);expect(b.data[1].draw.calls.count()).toBe(1);expect(b.data[2].draw.calls.count()).toBe(1);expect(b.data[3].draw.calls.count()).toBe(1)});it("should draw all elements except lines",function(){var a=window.acquireChart({type:"line",data:{datasets:[{data:[10,15,0,-4],label:"dataset1"}],labels:["label1","label2","label3","label4"]},options:{showLines:false}});var b=a.getDatasetMeta(0);spyOn(b.dataset,"draw");spyOn(b.data[0],"draw");spyOn(b.data[1],"draw");spyOn(b.data[2],"draw");spyOn(b.data[3],"draw");a.update();expect(b.dataset.draw.calls.count()).toBe(0);expect(b.data[0].draw.calls.count()).toBe(1);expect(b.data[1].draw.calls.count()).toBe(1);expect(b.data[2].draw.calls.count()).toBe(1);expect(b.data[3].draw.calls.count()).toBe(1)});it("should update elements when modifying data",function(){var a=window.acquireChart({type:"line",data:{datasets:[{data:[10,15,0,-4],label:"dataset",xAxisID:"firstXScaleID",yAxisID:"firstYScaleID"}],labels:["label1","label2","label3","label4"]},options:{showLines:true,elements:{point:{backgroundColor:"red",borderColor:"blue",}},scales:{xAxes:[{id:"firstXScaleID"}],yAxes:[{id:"firstYScaleID"}]}},});var b=a.getDatasetMeta(0);expect(b.data.length).toBe(4);a.data.datasets[0].data=[1,2];a.data.datasets[0].borderWidth=1;a.update();expect(b.data.length).toBe(2);[{x:44,y:484},{x:193,y:32}].forEach(function(d,c){expect(b.data[c]._datasetIndex).toBe(0);expect(b.data[c]._index).toBe(c);expect(b.data[c]._xScale).toBe(a.scales.firstXScaleID);expect(b.data[c]._yScale).toBe(a.scales.firstYScaleID);expect(b.data[c]._model.x).toBeCloseToPixel(d.x);expect(b.data[c]._model.y).toBeCloseToPixel(d.y);expect(b.data[c]._model).toEqual(jasmine.objectContaining({backgroundColor:"red",borderColor:"blue",}))});a.data.datasets[0].data=[1,2,3];a.update();expect(b.data.length).toBe(3)});it("should update elements when the y scale is stacked",function(){var a=window.acquireChart({type:"line",data:{datasets:[{data:[10,-10,10,-10],label:"dataset1"},{data:[10,15,0,-4],label:"dataset2"}],labels:["label1","label2","label3","label4"]},options:{scales:{yAxes:[{stacked:true}]}}});var c=a.getDatasetMeta(0);[{x:38,y:161},{x:189,y:419},{x:341,y:161},{x:492,y:419}].forEach(function(d,e){expect(c.data[e]._model.x).toBeCloseToPixel(d.x);expect(c.data[e]._model.y).toBeCloseToPixel(d.y)});var b=a.getDatasetMeta(1);[{x:38,y:32},{x:189,y:97},{x:341,y:161},{x:492,y:471}].forEach(function(d,e){expect(b.data[e]._model.x).toBeCloseToPixel(d.x);expect(b.data[e]._model.y).toBeCloseToPixel(d.y)})});it("should find the correct scale zero when the data is all positive",function(){var a=window.acquireChart({type:"line",data:{datasets:[{data:[10,15,20,20],label:"dataset1",}],labels:["label1","label2","label3","label4"]},});var b=a.getDatasetMeta(0);expect(b.dataset._model).toEqual(jasmine.objectContaining({scaleTop:32,scaleBottom:484,scaleZero:484,}))});it("should find the correct scale zero when the data is all negative",function(){var a=window.acquireChart({type:"line",data:{datasets:[{data:[-10,-15,-20,-20],label:"dataset1",}],labels:["label1","label2","label3","label4"]},});var b=a.getDatasetMeta(0);expect(b.dataset._model).toEqual(jasmine.objectContaining({scaleTop:32,scaleBottom:484,scaleZero:32,}))});it("should fall back to the line styles for points",function(){var a=window.acquireChart({type:"line",data:{datasets:[{data:[0,0],label:"dataset1",backgroundColor:"rgb(98, 98, 98)",borderColor:"rgb(8, 8, 8)",borderWidth:0.55,}],labels:["label1","label2"]}});var b=a.getDatasetMeta(0);expect(b.dataset._model.backgroundColor).toBe("rgb(98, 98, 98)");expect(b.dataset._model.borderColor).toBe("rgb(8, 8, 8)");expect(b.dataset._model.borderWidth).toBe(0.55)});it("should handle number of data point changes in update",function(){var a=window.acquireChart({type:"line",data:{datasets:[{data:[10,15,0,-4],label:"dataset1",}],labels:["label1","label2","label3","label4"]}});var b=a.getDatasetMeta(0);a.data.datasets[0].data=[1,2];a.update();expect(b.data.length).toBe(2);expect(b.data[0] instanceof Chart.elements.Point).toBe(true);expect(b.data[1] instanceof Chart.elements.Point).toBe(true);a.data.datasets[0].data=[1,2,3,4,5];a.update();expect(b.data.length).toBe(5);expect(b.data[0] instanceof Chart.elements.Point).toBe(true);expect(b.data[1] instanceof Chart.elements.Point).toBe(true);expect(b.data[2] instanceof Chart.elements.Point).toBe(true);expect(b.data[3] instanceof Chart.elements.Point).toBe(true);expect(b.data[4] instanceof Chart.elements.Point).toBe(true)});it("should set point hover styles",function(){var b=window.acquireChart({type:"line",data:{datasets:[{data:[10,15,0,-4],label:"dataset1",}],labels:["label1","label2","label3","label4"]},options:{elements:{point:{backgroundColor:"rgb(255, 255, 0)",borderWidth:1,borderColor:"rgb(255, 255, 255)",hitRadius:1,hoverRadius:4,hoverBorderWidth:1,radius:3,}}}});var c=b.getDatasetMeta(0);var a=c.data[0];c.controller.setHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(229, 230, 0)");expect(a._model.borderColor).toBe("rgb(230, 230, 230)");expect(a._model.borderWidth).toBe(1);expect(a._model.radius).toBe(4);b.data.datasets[0].pointHoverRadius=3.3;b.data.datasets[0].pointHoverBackgroundColor="rgb(77, 79, 81)";b.data.datasets[0].pointHoverBorderColor="rgb(123, 125, 127)";b.data.datasets[0].pointHoverBorderWidth=2.1;c.controller.setHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(77, 79, 81)");expect(a._model.borderColor).toBe("rgb(123, 125, 127)");expect(a._model.borderWidth).toBe(2.1);expect(a._model.radius).toBe(3.3);b.data.datasets[0].pointRadius=250;b.data.datasets[0].radius=20;c.controller.setHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(77, 79, 81)");expect(a._model.borderColor).toBe("rgb(123, 125, 127)");expect(a._model.borderWidth).toBe(2.1);expect(a._model.radius).toBe(3.3);a.custom={hoverRadius:4.4,hoverBorderWidth:5.5,hoverBackgroundColor:"rgb(0, 0, 0)",hoverBorderColor:"rgb(10, 10, 10)"};c.controller.setHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(0, 0, 0)");expect(a._model.borderColor).toBe("rgb(10, 10, 10)");expect(a._model.borderWidth).toBe(5.5);expect(a._model.radius).toBe(4.4)});it("should remove hover styles",function(){var b=window.acquireChart({type:"line",data:{datasets:[{data:[10,15,0,-4],label:"dataset1",}],labels:["label1","label2","label3","label4"]},options:{elements:{point:{backgroundColor:"rgb(255, 255, 0)",borderWidth:1,borderColor:"rgb(255, 255, 255)",hitRadius:1,hoverRadius:4,hoverBorderWidth:1,radius:3,}}}});var c=b.getDatasetMeta(0);var a=c.data[0];b.options.elements.point.backgroundColor="rgb(45, 46, 47)";b.options.elements.point.borderColor="rgb(50, 51, 52)";b.options.elements.point.borderWidth=10.1;b.options.elements.point.radius=1.01;c.controller.removeHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(45, 46, 47)");expect(a._model.borderColor).toBe("rgb(50, 51, 52)");expect(a._model.borderWidth).toBe(10.1);expect(a._model.radius).toBe(1.01);b.data.datasets[0].radius=3.3;b.data.datasets[0].pointBackgroundColor="rgb(77, 79, 81)";b.data.datasets[0].pointBorderColor="rgb(123, 125, 127)";b.data.datasets[0].pointBorderWidth=2.1;c.controller.removeHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(77, 79, 81)");expect(a._model.borderColor).toBe("rgb(123, 125, 127)");expect(a._model.borderWidth).toBe(2.1);expect(a._model.radius).toBe(3.3);b.data.datasets[0].pointRadius=250;b.data.datasets[0].radius=20;c.controller.removeHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(77, 79, 81)");expect(a._model.borderColor).toBe("rgb(123, 125, 127)");expect(a._model.borderWidth).toBe(2.1);expect(a._model.radius).toBe(250);a.custom={radius:4.4,borderWidth:5.5,backgroundColor:"rgb(0, 0, 0)",borderColor:"rgb(10, 10, 10)"};c.controller.removeHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(0, 0, 0)");expect(a._model.borderColor).toBe("rgb(10, 10, 10)");expect(a._model.borderWidth).toBe(5.5);expect(a._model.radius).toBe(4.4)})});