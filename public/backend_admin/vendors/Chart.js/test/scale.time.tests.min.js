describe("Time scale tests",function(){var a;beforeEach(function(){window.addDefaultMatchers(jasmine);jasmine.addMatchers({toBeCloseToTime:function(){return{compare:function(e,c){var b=false;var d=e.diff(c.value,c.unit,true);b=Math.abs(d)<(c.threshold!==undefined?c.threshold:0.5);return{pass:b}}}}})});afterEach(function(){if(a){releaseChart(a)}});it("Should load moment.js as a dependency",function(){expect(window.moment).not.toBe(undefined)});it("Should register the constructor with the scale service",function(){var b=Chart.scaleService.getScaleConstructor("time");expect(b).not.toBe(undefined);expect(typeof b).toBe("function")});it("Should have the correct default config",function(){var b=Chart.scaleService.getScaleDefaults("time");expect(b).toEqual({display:true,gridLines:{color:"rgba(0, 0, 0, 0.1)",drawBorder:true,drawOnChartArea:true,drawTicks:true,tickMarkLength:10,lineWidth:1,offsetGridLines:false,display:true,zeroLineColor:"rgba(0,0,0,0.25)",zeroLineWidth:1},position:"bottom",scaleLabel:{labelString:"",display:false},ticks:{beginAtZero:false,minRotation:0,maxRotation:50,mirror:false,padding:10,reverse:false,display:true,callback:b.ticks.callback,autoSkip:false,autoSkipPadding:0,labelOffset:0},time:{parser:false,format:false,unit:false,round:false,isoWeekday:false,displayFormat:false,displayFormats:{millisecond:"h:mm:ss.SSS a",second:"h:mm:ss a",minute:"h:mm:ss a",hour:"MMM D, hA",day:"ll",week:"ll",month:"MMM YYYY",quarter:"[Q]Q - YYYY",year:"YYYY"}}});expect(b.ticks.callback).toEqual(jasmine.any(Function))});it("should build ticks using days",function(){var b="myScale";var d={labels:["2015-01-01T20:00:00","2015-01-02T21:00:00","2015-01-03T22:00:00","2015-01-05T23:00:00","2015-01-07T03:00","2015-01-08T10:00","2015-01-10T12:00"],};var c=window.createMockContext();var f=Chart.scaleService.getScaleConstructor("time");var e=new f({ctx:c,options:Chart.scaleService.getScaleDefaults("time"),chart:{data:d},id:b});e.update(400,50);expect(e.ticks).toEqual(["Dec 28, 2014","Jan 4, 2015","Jan 11, 2015"])});it("should build ticks using date objects",function(){function d(h){return moment("01/01/2015 12:00","DD/MM/YYYY HH:mm").add(h,"d").toDate()}var b="myScale";var e={labels:[d(0),d(1),d(2),d(4),d(6),d(7),d(9)],};var c=window.createMockContext();var g=Chart.scaleService.getScaleConstructor("time");var f=new g({ctx:c,options:Chart.scaleService.getScaleDefaults("time"),chart:{data:e},id:b});f.update(400,50);expect(f.ticks).toEqual(["Dec 28, 2014","Jan 4, 2015","Jan 11, 2015"])});it("should build ticks when the data is xy points",function(){function b(d){return moment("01/01/2015 12:00","DD/MM/YYYY HH:mm").add(d,"d").toDate()}a=window.acquireChart({type:"line",data:{datasets:[{xAxisID:"xScale0",yAxisID:"yScale0",data:[{x:b(0),y:1},{x:b(1),y:10},{x:b(2),y:0},{x:b(4),y:5},{x:b(6),y:77},{x:b(7),y:9},{x:b(9),y:5}]}],},options:{scales:{xAxes:[{id:"xScale0",type:"time",position:"bottom"}],yAxes:[{id:"yScale0",type:"linear"}]}}});var c=a.scales.xScale0;expect(c.ticks).toEqual(["Jan 1, 2015","Jan 3, 2015","Jan 5, 2015","Jan 7, 2015","Jan 9, 2015","Jan 11, 2015"])});it("should allow custom time parsers",function(){a=window.acquireChart({type:"line",data:{datasets:[{xAxisID:"xScale0",yAxisID:"yScale0",data:[{x:375068900,y:1}]}],},options:{scales:{xAxes:[{id:"xScale0",type:"time",position:"bottom",time:{unit:"day",round:true,parser:function c(d){return moment.unix(d)}}}],yAxes:[{id:"yScale0",type:"linear"}]}}});var b=a.scales.xScale0;expect(b.ticks[0]).toEqualOneOf(["Nov 19, 1981","Nov 20, 1981","Nov 21, 1981"]);expect(b.ticks[1]).toEqualOneOf(["Nov 19, 1981","Nov 20, 1981","Nov 21, 1981"])});it("should build ticks using the config unit",function(){var c="myScale";var e={labels:["2015-01-01T20:00:00","2015-01-02T21:00:00"],};var d=window.createMockContext();var b=Chart.helpers.clone(Chart.scaleService.getScaleDefaults("time"));b.time.unit="hour";var g=Chart.scaleService.getScaleConstructor("time");var f=new g({ctx:d,options:b,chart:{data:e},id:c});f.update(400,50);expect(f.ticks).toEqual(["Jan 1, 8PM","Jan 1, 9PM","Jan 1, 10PM","Jan 1, 11PM","Jan 2, 12AM","Jan 2, 1AM","Jan 2, 2AM","Jan 2, 3AM","Jan 2, 4AM","Jan 2, 5AM","Jan 2, 6AM","Jan 2, 7AM","Jan 2, 8AM","Jan 2, 9AM","Jan 2, 10AM","Jan 2, 11AM","Jan 2, 12PM","Jan 2, 1PM","Jan 2, 2PM","Jan 2, 3PM","Jan 2, 4PM","Jan 2, 5PM","Jan 2, 6PM","Jan 2, 7PM","Jan 2, 8PM","Jan 2, 9PM"])});it("should build ticks using the config diff",function(){var c="myScale";var e={labels:["2015-01-01T20:00:00","2015-02-02T21:00:00","2015-02-21T01:00:00"],};var d=window.createMockContext();var b=Chart.helpers.clone(Chart.scaleService.getScaleDefaults("time"));b.time.unit="week";b.time.round="week";var g=Chart.scaleService.getScaleConstructor("time");var f=new g({ctx:d,options:b,chart:{data:e},id:c});f.update(400,50);expect(f.ticks).toEqual(["Dec 28, 2014","Jan 4, 2015","Jan 11, 2015","Jan 18, 2015","Jan 25, 2015","Feb 1, 2015","Feb 8, 2015","Feb 15, 2015"])});it("Should use the min and max options",function(){var c="myScale";var e={labels:["2015-01-01T20:00:00","2015-01-02T20:00:00","2015-01-03T20:00:00"],};var d=window.createMockContext();var b=Chart.helpers.clone(Chart.scaleService.getScaleDefaults("time"));b.time.min="2015-01-01T04:00:00";b.time.max="2015-01-05T06:00:00";var g=Chart.scaleService.getScaleConstructor("time");var f=new g({ctx:d,options:b,chart:{data:e},id:c});f.update(400,50);expect(f.ticks).toEqual(["Jan 1, 2015","Jan 5, 2015"])});it("Should use the isoWeekday option",function(){var c="myScale";var e={labels:["2015-01-01T20:00:00","2015-01-02T20:00:00","2015-01-03T20:00:00"]};var d=window.createMockContext();var b=Chart.helpers.clone(Chart.scaleService.getScaleDefaults("time"));b.time.unit="week";b.time.isoWeekday=3;var g=Chart.scaleService.getScaleConstructor("time");var f=new g({ctx:d,options:b,chart:{data:e},id:c});f.update(400,50);expect(f.ticks).toEqual(["Dec 31, 2014","Jan 7, 2015"])});it("should get the correct pixel for a value",function(){a=window.acquireChart({type:"line",data:{datasets:[{xAxisID:"xScale0",yAxisID:"yScale0",data:[]}],labels:["2015-01-01T20:00:00","2015-01-02T21:00:00","2015-01-03T22:00:00","2015-01-05T23:00:00","2015-01-07T03:00","2015-01-08T10:00","2015-01-10T12:00"],},options:{scales:{xAxes:[{id:"xScale0",type:"time",position:"bottom"}],yAxes:[{id:"yScale0",type:"linear",position:"left"}]}}});var b=a.scales.xScale0;expect(b.getPixelForValue("",0,0)).toBeCloseToPixel(78);expect(b.getPixelForValue("",6,0)).toBeCloseToPixel(452);expect(b.getValueForPixel(78)).toBeCloseToTime({value:moment(a.data.labels[0]),unit:"hour",threshold:0.75});expect(b.getValueForPixel(452)).toBeCloseToTime({value:moment(a.data.labels[6]),unit:"hour"})});it("should get the correct label for a data value",function(){a=window.acquireChart({type:"line",data:{datasets:[{xAxisID:"xScale0",yAxisID:"yScale0",data:[]}],labels:["2015-01-01T20:00:00","2015-01-02T21:00:00","2015-01-03T22:00:00","2015-01-05T23:00:00","2015-01-07T03:00","2015-01-08T10:00","2015-01-10T12:00"],},options:{scales:{xAxes:[{id:"xScale0",type:"time",position:"bottom"}],yAxes:[{id:"yScale0",type:"linear",position:"left"}]}}});var b=a.scales.xScale0;expect(b.getLabelForIndex(0,0)).toBe("2015-01-01T20:00:00");expect(b.getLabelForIndex(6,0)).toBe("2015-01-10T12:00")})});