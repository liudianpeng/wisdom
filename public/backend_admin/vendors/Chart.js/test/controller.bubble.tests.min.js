describe("Bubble controller tests",function(){beforeEach(function(){window.addDefaultMatchers(jasmine)});afterEach(function(){window.releaseAllCharts()});it("should be constructed",function(){var a=window.acquireChart({type:"bubble",data:{datasets:[{data:[]}]}});var b=a.getDatasetMeta(0);expect(b.type).toBe("bubble");expect(b.controller).not.toBe(undefined);expect(b.controller.index).toBe(0);expect(b.data).toEqual([]);b.controller.updateIndex(1);expect(b.controller.index).toBe(1)});it("should use the first scale IDs if the dataset does not specify them",function(){var a=window.acquireChart({type:"bubble",data:{datasets:[{data:[]}]},options:{scales:{xAxes:[{id:"firstXScaleID"}],yAxes:[{id:"firstYScaleID"}]}}});var b=a.getDatasetMeta(0);expect(b.xAxisID).toBe("firstXScaleID");expect(b.yAxisID).toBe("firstYScaleID")});it("should create point elements for each data item during initialization",function(){var a=window.acquireChart({type:"bubble",data:{datasets:[{data:[10,15,0,-4]}]}});var b=a.getDatasetMeta(0);expect(b.data.length).toBe(4);expect(b.data[0] instanceof Chart.elements.Point).toBe(true);expect(b.data[1] instanceof Chart.elements.Point).toBe(true);expect(b.data[2] instanceof Chart.elements.Point).toBe(true);expect(b.data[3] instanceof Chart.elements.Point).toBe(true)});it("should draw all elements",function(){var a=window.acquireChart({type:"bubble",data:{datasets:[{data:[10,15,0,-4]}]},options:{animation:false,showLines:true}});var b=a.getDatasetMeta(0);spyOn(b.data[0],"draw");spyOn(b.data[1],"draw");spyOn(b.data[2],"draw");spyOn(b.data[3],"draw");a.update();expect(b.data[0].draw.calls.count()).toBe(1);expect(b.data[1].draw.calls.count()).toBe(1);expect(b.data[2].draw.calls.count()).toBe(1);expect(b.data[3].draw.calls.count()).toBe(1)});it("should update elements when modifying style",function(){var b=window.acquireChart({type:"bubble",data:{datasets:[{data:[{x:10,y:10,r:5},{x:-15,y:-10,r:1},{x:0,y:-9,r:2},{x:-4,y:10,r:1}]}],labels:["label1","label2","label3","label4"]},options:{scales:{xAxes:[{type:"category"}],yAxes:[{type:"linear"}]}}});var c=b.getDatasetMeta(0);[{r:5,x:38,y:32},{r:1,x:189,y:484},{r:2,x:341,y:461},{r:1,x:492,y:32}].forEach(function(e,d){expect(c.data[d]._model.radius).toBe(e.r);expect(c.data[d]._model.x).toBeCloseToPixel(e.x);expect(c.data[d]._model.y).toBeCloseToPixel(e.y);expect(c.data[d]._model).toEqual(jasmine.objectContaining({backgroundColor:Chart.defaults.global.defaultColor,borderColor:Chart.defaults.global.defaultColor,borderWidth:1,hitRadius:1,skip:false}))});b.data.datasets[0].backgroundColor="rgb(98, 98, 98)";b.data.datasets[0].borderColor="rgb(8, 8, 8)";b.data.datasets[0].borderWidth=0.55;b.data.datasets[0].radius=22;b.data.datasets[0].hitRadius=3.3;b.update();for(var a=0;a<4;++a){expect(c.data[a]._model).toEqual(jasmine.objectContaining({backgroundColor:"rgb(98, 98, 98)",borderColor:"rgb(8, 8, 8)",borderWidth:0.55,hitRadius:3.3,skip:false}))}c.data[0].custom={radius:2.2,backgroundColor:"rgb(0, 1, 3)",borderColor:"rgb(4, 6, 8)",borderWidth:0.787,tension:0.15,hitRadius:5,skip:true};b.update();expect(c.data[0]._model).toEqual(jasmine.objectContaining({backgroundColor:"rgb(0, 1, 3)",borderColor:"rgb(4, 6, 8)",borderWidth:0.787,hitRadius:5,skip:true}))});it("should handle number of data point changes in update",function(){var a=window.acquireChart({type:"bubble",data:{datasets:[{data:[{x:10,y:10,r:5},{x:-15,y:-10,r:1},{x:0,y:-9,r:2},{x:-4,y:10,r:1}]}],labels:["label1","label2","label3","label4"]}});var b=a.getDatasetMeta(0);expect(b.data.length).toBe(4);a.data.datasets[0].data=[{x:1,y:1,r:10},{x:10,y:5,r:2}];a.update();expect(b.data.length).toBe(2);expect(b.data[0] instanceof Chart.elements.Point).toBe(true);expect(b.data[1] instanceof Chart.elements.Point).toBe(true);a.data.datasets[0].data=[{x:10,y:10,r:5},{x:-15,y:-10,r:1},{x:0,y:-9,r:2},{x:-4,y:10,r:1},{x:-5,y:0,r:3}];a.update();expect(b.data.length).toBe(5);expect(b.data[0] instanceof Chart.elements.Point).toBe(true);expect(b.data[1] instanceof Chart.elements.Point).toBe(true);expect(b.data[2] instanceof Chart.elements.Point).toBe(true);expect(b.data[3] instanceof Chart.elements.Point).toBe(true);expect(b.data[4] instanceof Chart.elements.Point).toBe(true)});it("should set hover styles",function(){var b=window.acquireChart({type:"bubble",data:{datasets:[{data:[{x:10,y:10,r:5},{x:-15,y:-10,r:1},{x:0,y:-9,r:2},{x:-4,y:10,r:1}]}],labels:["label1","label2","label3","label4"]},options:{elements:{point:{backgroundColor:"rgb(255, 255, 0)",borderWidth:1,borderColor:"rgb(255, 255, 255)",hitRadius:1,hoverRadius:4,hoverBorderWidth:1,radius:3}}}});var c=b.getDatasetMeta(0);var a=c.data[0];c.controller.setHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(229, 230, 0)");expect(a._model.borderColor).toBe("rgb(230, 230, 230)");expect(a._model.borderWidth).toBe(1);expect(a._model.radius).toBe(9);b.data.datasets[0].hoverRadius=3.3;b.data.datasets[0].hoverBackgroundColor="rgb(77, 79, 81)";b.data.datasets[0].hoverBorderColor="rgb(123, 125, 127)";b.data.datasets[0].hoverBorderWidth=2.1;c.controller.setHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(77, 79, 81)");expect(a._model.borderColor).toBe("rgb(123, 125, 127)");expect(a._model.borderWidth).toBe(2.1);expect(a._model.radius).toBe(8.3);a.custom={hoverRadius:4.4,hoverBorderWidth:5.5,hoverBackgroundColor:"rgb(0, 0, 0)",hoverBorderColor:"rgb(10, 10, 10)"};c.controller.setHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(0, 0, 0)");expect(a._model.borderColor).toBe("rgb(10, 10, 10)");expect(a._model.borderWidth).toBe(5.5);expect(a._model.radius).toBe(4.4)});it("should remove hover styles",function(){var b=window.acquireChart({type:"bubble",data:{datasets:[{data:[{x:10,y:10,r:5},{x:-15,y:-10,r:1},{x:0,y:-9,r:2},{x:-4,y:10,r:1}]}],labels:["label1","label2","label3","label4"]},options:{elements:{point:{backgroundColor:"rgb(255, 255, 0)",borderWidth:1,borderColor:"rgb(255, 255, 255)",hitRadius:1,hoverRadius:4,hoverBorderWidth:1,radius:3}}}});var c=b.getDatasetMeta(0);var a=c.data[0];b.options.elements.point.backgroundColor="rgb(45, 46, 47)";b.options.elements.point.borderColor="rgb(50, 51, 52)";b.options.elements.point.borderWidth=10.1;b.options.elements.point.radius=1.01;c.controller.removeHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(45, 46, 47)");expect(a._model.borderColor).toBe("rgb(50, 51, 52)");expect(a._model.borderWidth).toBe(10.1);expect(a._model.radius).toBe(5);b.data.datasets[0].radius=3.3;b.data.datasets[0].backgroundColor="rgb(77, 79, 81)";b.data.datasets[0].borderColor="rgb(123, 125, 127)";b.data.datasets[0].borderWidth=2.1;c.controller.removeHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(77, 79, 81)");expect(a._model.borderColor).toBe("rgb(123, 125, 127)");expect(a._model.borderWidth).toBe(2.1);expect(a._model.radius).toBe(5);a.custom={radius:4.4,borderWidth:5.5,backgroundColor:"rgb(0, 0, 0)",borderColor:"rgb(10, 10, 10)"};c.controller.removeHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(0, 0, 0)");expect(a._model.borderColor).toBe("rgb(10, 10, 10)");expect(a._model.borderWidth).toBe(5.5);expect(a._model.radius).toBe(4.4)})});