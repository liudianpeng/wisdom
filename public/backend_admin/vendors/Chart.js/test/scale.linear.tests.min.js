describe("Linear Scale",function(){var a;beforeEach(function(){window.addDefaultMatchers(jasmine)});afterEach(function(){if(a){releaseChart(a)}});it("Should register the constructor with the scale service",function(){var b=Chart.scaleService.getScaleConstructor("linear");expect(b).not.toBe(undefined);expect(typeof b).toBe("function")});it("Should have the correct default config",function(){var b=Chart.scaleService.getScaleDefaults("linear");expect(b).toEqual({display:true,gridLines:{color:"rgba(0, 0, 0, 0.1)",drawBorder:true,drawOnChartArea:true,drawTicks:true,tickMarkLength:10,lineWidth:1,offsetGridLines:false,display:true,zeroLineColor:"rgba(0,0,0,0.25)",zeroLineWidth:1,},position:"left",scaleLabel:{labelString:"",display:false,},ticks:{beginAtZero:false,minRotation:0,maxRotation:50,mirror:false,padding:10,reverse:false,display:true,callback:b.ticks.callback,autoSkip:true,autoSkipPadding:0,labelOffset:0}});expect(b.ticks.callback).toEqual(jasmine.any(Function))});it("Should correctly determine the max & min data values",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",data:[10,5,0,-5,78,-100]},{yAxisID:"yScale1",data:[-1000,1000],},{yAxisID:"yScale0",data:[150]}],labels:["a","b","c","d","e","f"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear"},{id:"yScale1",type:"linear"}]}}});expect(a.scales.yScale0).not.toEqual(undefined);expect(a.scales.yScale0.min).toBe(-100);expect(a.scales.yScale0.max).toBe(150)});it("Should correctly determine the max & min of string data values",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",data:["10","5","0","-5","78","-100"]},{yAxisID:"yScale1",data:["-1000","1000"],},{yAxisID:"yScale0",data:["150"]}],labels:["a","b","c","d","e","f"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear"},{id:"yScale1",type:"linear"}]}}});expect(a.scales.yScale0).not.toEqual(undefined);expect(a.scales.yScale0.min).toBe(-100);expect(a.scales.yScale0.max).toBe(150)});it("Should correctly determine the max & min data values ignoring hidden datasets",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",data:["10","5","0","-5","78","-100"]},{yAxisID:"yScale1",data:["-1000","1000"],},{yAxisID:"yScale0",data:["150"],hidden:true}],labels:["a","b","c","d","e","f"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear"},{id:"yScale1",type:"linear"}]}}});expect(a.scales.yScale0).not.toEqual(undefined);expect(a.scales.yScale0.min).toBe(-100);expect(a.scales.yScale0.max).toBe(80)});it("Should correctly determine the max & min data values ignoring data that is NaN",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",data:[null,90,NaN,undefined,45,30]}],labels:["a","b","c","d","e","f"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear"}]}}});expect(a.scales.yScale0.min).toBe(30);expect(a.scales.yScale0.max).toBe(90);a.scales.yScale0.options.stacked=true;a.update();expect(a.scales.yScale0.min).toBe(0);expect(a.scales.yScale0.max).toBe(90)});it("Should correctly determine the max & min for scatter data",function(){a=window.acquireChart({type:"line",data:{datasets:[{xAxisID:"xScale0",yAxisID:"yScale0",data:[{x:10,y:100},{x:-10,y:0},{x:0,y:0},{x:99,y:7}]}],},options:{scales:{xAxes:[{id:"xScale0",type:"linear",position:"bottom"}],yAxes:[{id:"yScale0",type:"linear"}]}}});a.update();expect(a.scales.xScale0.min).toBe(-20);expect(a.scales.xScale0.max).toBe(100);expect(a.scales.yScale0.min).toBe(0);expect(a.scales.yScale0.max).toBe(100)});it("Should correctly get the label for the given index",function(){a=window.acquireChart({type:"line",data:{datasets:[{xAxisID:"xScale0",yAxisID:"yScale0",data:[{x:10,y:100},{x:-10,y:0},{x:0,y:0},{x:99,y:7}]}],},options:{scales:{xAxes:[{id:"xScale0",type:"linear",position:"bottom"}],yAxes:[{id:"yScale0",type:"linear"}]}}});a.update();expect(a.scales.yScale0.getLabelForIndex(3,0)).toBe(7)});it("Should correctly determine the min and max data values when stacked mode is turned on",function(){a=window.acquireChart({type:"line",data:{datasets:[{yAxisID:"yScale0",data:[10,5,0,-5,78,-100],type:"bar"},{yAxisID:"yScale1",data:[-1000,1000],},{yAxisID:"yScale0",data:[150,0,0,-100,-10,9],type:"bar"},{yAxisID:"yScale0",data:[10,10,10,10,10,10],type:"line"}],labels:["a","b","c","d","e","f"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear",stacked:true},{id:"yScale1",type:"linear"}]}}});a.update();expect(a.scales.yScale0.min).toBe(-150);expect(a.scales.yScale0.max).toBe(200)});it("Should correctly determine the min and max data values when stacked mode is turned on and there are hidden datasets",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",data:[10,5,0,-5,78,-100],},{yAxisID:"yScale1",data:[-1000,1000],},{yAxisID:"yScale0",data:[150,0,0,-100,-10,9],},{yAxisID:"yScale0",data:[10,20,30,40,50,60],hidden:true}],labels:["a","b","c","d","e","f"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear",stacked:true},{id:"yScale1",type:"linear"}]}}});a.update();expect(a.scales.yScale0.min).toBe(-150);expect(a.scales.yScale0.max).toBe(200)});it("Should correctly determine the min and max data values when stacked mode is turned on there are multiple types of datasets",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",type:"bar",data:[10,5,0,-5,78,-100]},{type:"line",data:[10,10,10,10,10,10],},{type:"bar",data:[150,0,0,-100,-10,9]}],labels:["a","b","c","d","e","f"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear",stacked:true}]}}});a.scales.yScale0.determineDataLimits();expect(a.scales.yScale0.min).toBe(-105);expect(a.scales.yScale0.max).toBe(160)});it("Should ensure that the scale has a max and min that are not equal",function(){a=window.acquireChart({type:"bar",data:{datasets:[],labels:["a","b","c","d","e","f"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear"}]}}});expect(a.scales.yScale0).not.toEqual(undefined);expect(a.scales.yScale0.min).toBe(-1);expect(a.scales.yScale0.max).toBe(1)});it("Should ensure that the scale has a max and min that are not equal when beginAtZero is set",function(){a=window.acquireChart({type:"bar",data:{datasets:[],labels:["a","b","c","d","e","f"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear",ticks:{beginAtZero:true}}]}}});expect(a.scales.yScale0).not.toEqual(undefined);expect(a.scales.yScale0.min).toBe(0);expect(a.scales.yScale0.max).toBe(1)});it("Should use the suggestedMin and suggestedMax options",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",data:[1,1,1,2,1,0]}],labels:["a","b","c","d","e","f"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear",ticks:{suggestedMax:10,suggestedMin:-10}}]}}});expect(a.scales.yScale0).not.toEqual(undefined);expect(a.scales.yScale0.min).toBe(-10);expect(a.scales.yScale0.max).toBe(10)});it("Should use the min and max options",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",data:[1,1,1,2,1,0]}],labels:["a","b","c","d","e","f"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear",ticks:{max:1010,min:-1010}}]}}});expect(a.scales.yScale0).not.toEqual(undefined);expect(a.scales.yScale0.min).toBe(-1010);expect(a.scales.yScale0.max).toBe(1010);expect(a.scales.yScale0.ticks[0]).toBe("1010");expect(a.scales.yScale0.ticks[a.scales.yScale0.ticks.length-1]).toBe("-1010")});it("should forcibly include 0 in the range if the beginAtZero option is used",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",data:[20,30,40,50]}],labels:["a","b","c","d"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear",}]}}});expect(a.scales.yScale0).not.toEqual(undefined);expect(a.scales.yScale0.ticks).toEqual(["50","45","40","35","30","25","20"]);a.scales.yScale0.options.ticks.beginAtZero=true;a.update();expect(a.scales.yScale0.ticks).toEqual(["50","45","40","35","30","25","20","15","10","5","0"]);a.data.datasets[0].data=[-20,-30,-40,-50];a.update();expect(a.scales.yScale0.ticks).toEqual(["0","-5","-10","-15","-20","-25","-30","-35","-40","-45","-50"]);a.scales.yScale0.options.ticks.beginAtZero=false;a.update();expect(a.scales.yScale0.ticks).toEqual(["-20","-25","-30","-35","-40","-45","-50"])});it("Should generate tick marks in the correct order in reversed mode",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",data:[10,5,0,25,78]}],labels:["a","b","c","d"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear",ticks:{reverse:true}}]}}});expect(a.scales.yScale0.ticks).toEqual(["0","10","20","30","40","50","60","70","80"]);expect(a.scales.yScale0.start).toBe(80);expect(a.scales.yScale0.end).toBe(0)});it("should use the correct number of decimal places in the default format function",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",data:[0.06,0.005,0,0.025,0.0078]}],labels:["a","b","c","d"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear",}]}}});expect(a.scales.yScale0.ticks).toEqual(["0.06","0.05","0.04","0.03","0.02","0.01","0"])});it("Should build labels using the user supplied callback",function(){a=window.acquireChart({type:"bar",data:{datasets:[{yAxisID:"yScale0",data:[10,5,0,25,78]}],labels:["a","b","c","d"]},options:{scales:{yAxes:[{id:"yScale0",type:"linear",ticks:{callback:function(c,b){return b.toString()}}}]}}});expect(a.scales.yScale0.ticks).toEqual(["0","1","2","3","4","5","6","7","8"])});it("Should get the correct pixel value for a point",function(){a=window.acquireChart({type:"line",data:{datasets:[{xAxisID:"xScale0",yAxisID:"yScale0",data:[]}],},options:{scales:{xAxes:[{id:"xScale0",type:"linear",position:"bottom"}],yAxes:[{id:"yScale0",type:"linear"}]}}});var c=a.scales.xScale0;expect(c.getPixelForValue(1,0,0)).toBeCloseToPixel(501);expect(c.getPixelForValue(-1,0,0)).toBeCloseToPixel(41);expect(c.getPixelForValue(0,0,0)).toBeCloseToPixel(271);expect(c.getValueForPixel(501)).toBeCloseTo(1,0.01);expect(c.getValueForPixel(41)).toBeCloseTo(-1,0.01);expect(c.getValueForPixel(271)).toBeCloseTo(0,0.01);var b=a.scales.yScale0;expect(b.getPixelForValue(1,0,0)).toBeCloseToPixel(32);expect(b.getPixelForValue(-1,0,0)).toBeCloseToPixel(484);expect(b.getPixelForValue(0,0,0)).toBeCloseToPixel(258);expect(b.getValueForPixel(32)).toBe(1);expect(b.getValueForPixel(484)).toBe(-1);expect(b.getValueForPixel(258)).toBe(0)});it("should fit correctly",function(){a=window.acquireChart({type:"line",data:{datasets:[{xAxisID:"xScale0",yAxisID:"yScale0",data:[{x:10,y:100},{x:-10,y:0},{x:0,y:0},{x:99,y:7}]}],},options:{scales:{xAxes:[{id:"xScale0",type:"linear",position:"bottom"}],yAxes:[{id:"yScale0",type:"linear"}]}}});var c=a.scales.xScale0;expect(c.paddingTop).toBeCloseToPixel(0);expect(c.paddingBottom).toBeCloseToPixel(0);expect(c.paddingLeft).toBeCloseToPixel(0);expect(c.paddingRight).toBeCloseToPixel(13.5);expect(c.width).toBeCloseToPixel(471);expect(c.height).toBeCloseToPixel(28);var b=a.scales.yScale0;expect(b.paddingTop).toBeCloseToPixel(0);expect(b.paddingBottom).toBeCloseToPixel(0);expect(b.paddingLeft).toBeCloseToPixel(0);expect(b.paddingRight).toBeCloseToPixel(0);expect(b.width).toBeCloseToPixel(41);expect(b.height).toBeCloseToPixel(452);c.options.scaleLabel.display=true;b.options.scaleLabel.display=true;a.update();expect(c.paddingTop).toBeCloseToPixel(0);expect(c.paddingBottom).toBeCloseToPixel(0);expect(c.paddingLeft).toBeCloseToPixel(0);expect(c.paddingRight).toBeCloseToPixel(13.5);expect(c.width).toBeCloseToPixel(453);expect(c.height).toBeCloseToPixel(46);expect(b.paddingTop).toBeCloseToPixel(0);expect(b.paddingBottom).toBeCloseToPixel(0);expect(b.paddingLeft).toBeCloseToPixel(0);expect(b.paddingRight).toBeCloseToPixel(0);expect(b.width).toBeCloseToPixel(59);expect(b.height).toBeCloseToPixel(434)})});