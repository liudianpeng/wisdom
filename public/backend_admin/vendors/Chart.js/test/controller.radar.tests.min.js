describe("Radar controller tests",function(){beforeEach(function(){window.addDefaultMatchers(jasmine)});afterEach(function(){window.releaseAllCharts()});it("Should be constructed",function(){var a=window.acquireChart({type:"radar",data:{datasets:[{data:[]}],labels:[]}});var b=a.getDatasetMeta(0);expect(b.type).toBe("radar");expect(b.controller).not.toBe(undefined);expect(b.controller.index).toBe(0);expect(b.data).toEqual([]);b.controller.updateIndex(1);expect(b.controller.index).toBe(1)});it("Should create arc elements for each data item during initialization",function(){var b=window.acquireChart({type:"radar",data:{datasets:[{data:[10,15,0,4]}],labels:["label1","label2","label3","label4"]}});var a=new Chart.controllers.radar(b,0);var c=b.getDatasetMeta(0);expect(c.dataset instanceof Chart.elements.Line).toBe(true);expect(c.data.length).toBe(4);expect(c.data[0] instanceof Chart.elements.Point).toBe(true);expect(c.data[1] instanceof Chart.elements.Point).toBe(true);expect(c.data[2] instanceof Chart.elements.Point).toBe(true);expect(c.data[3] instanceof Chart.elements.Point).toBe(true)});it("should draw all elements",function(){var a=window.acquireChart({type:"radar",data:{datasets:[{data:[10,15,0,4]}],labels:["label1","label2","label3","label4"]}});var b=a.getDatasetMeta(0);spyOn(b.dataset,"draw");spyOn(b.data[0],"draw");spyOn(b.data[1],"draw");spyOn(b.data[2],"draw");spyOn(b.data[3],"draw");a.update();expect(b.dataset.draw.calls.count()).toBe(1);expect(b.data[0].draw.calls.count()).toBe(1);expect(b.data[1].draw.calls.count()).toBe(1);expect(b.data[2].draw.calls.count()).toBe(1);expect(b.data[3].draw.calls.count()).toBe(1)});it("should update elements",function(){var a=window.acquireChart({type:"radar",data:{datasets:[{data:[10,15,0,4]}],labels:["label1","label2","label3","label4"]},options:{showLines:true,elements:{line:{backgroundColor:"rgb(255, 0, 0)",borderCapStyle:"round",borderColor:"rgb(0, 255, 0)",borderDash:[],borderDashOffset:0.1,borderJoinStyle:"bevel",borderWidth:1.2,fill:true,tension:0.1,},point:{backgroundColor:Chart.defaults.global.defaultColor,borderWidth:1,borderColor:Chart.defaults.global.defaultColor,hitRadius:1,hoverRadius:4,hoverBorderWidth:1,radius:3,pointStyle:"circle"}}}});var b=a.getDatasetMeta(0);b.controller.reset();expect(b.dataset._model.scaleTop).toBeCloseToPixel(32);expect(b.dataset._model.scaleBottom).toBeCloseToPixel(512);expect(b.dataset._model.scaleZero.x).toBeCloseToPixel(256);expect(b.dataset._model.scaleZero.y).toBeCloseToPixel(272);expect(b.dataset._model).toEqual(jasmine.objectContaining({backgroundColor:"rgb(255, 0, 0)",borderCapStyle:"round",borderColor:"rgb(0, 255, 0)",borderDash:[],borderDashOffset:0.1,borderJoinStyle:"bevel",borderWidth:1.2,fill:true,tension:0.1,}));[{x:256,y:272,cppx:256,cppy:272,cpnx:256,cpny:272},{x:256,y:272,cppx:256,cppy:272,cpnx:256,cpny:272},{x:256,y:272,cppx:256,cppy:272,cpnx:256,cpny:272},{x:256,y:272,cppx:256,cppy:272,cpnx:256,cpny:272},].forEach(function(d,c){expect(b.data[c]._model.x).toBeCloseToPixel(d.x);expect(b.data[c]._model.y).toBeCloseToPixel(d.y);expect(b.data[c]._model.controlPointPreviousX).toBeCloseToPixel(d.cppx);expect(b.data[c]._model.controlPointPreviousY).toBeCloseToPixel(d.cppy);expect(b.data[c]._model.controlPointNextX).toBeCloseToPixel(d.cpnx);expect(b.data[c]._model.controlPointNextY).toBeCloseToPixel(d.cpny);expect(b.data[c]._model).toEqual(jasmine.objectContaining({backgroundColor:Chart.defaults.global.defaultColor,borderWidth:1,borderColor:Chart.defaults.global.defaultColor,hitRadius:1,radius:3,pointStyle:"circle",skip:false,tension:0.1,}))});b.controller.update();[{x:256,y:133,cppx:246,cppy:133,cpnx:272,cpny:133},{x:464,y:272,cppx:464,cppy:264,cpnx:464,cpny:278},{x:256,y:272,cppx:276.9,cppy:272,cpnx:250.4,cpny:272},{x:200,y:272,cppx:200,cppy:275,cpnx:200,cpny:261},].forEach(function(d,c){expect(b.data[c]._model.x).toBeCloseToPixel(d.x);expect(b.data[c]._model.y).toBeCloseToPixel(d.y);expect(b.data[c]._model.controlPointPreviousX).toBeCloseToPixel(d.cppx);expect(b.data[c]._model.controlPointPreviousY).toBeCloseToPixel(d.cppy);expect(b.data[c]._model.controlPointNextX).toBeCloseToPixel(d.cpnx);expect(b.data[c]._model.controlPointNextY).toBeCloseToPixel(d.cpny);expect(b.data[c]._model).toEqual(jasmine.objectContaining({backgroundColor:Chart.defaults.global.defaultColor,borderWidth:1,borderColor:Chart.defaults.global.defaultColor,hitRadius:1,radius:3,pointStyle:"circle",skip:false,tension:0.1,}))});a.data.datasets[0].tension=0;a.data.datasets[0].backgroundColor="rgb(98, 98, 98)";a.data.datasets[0].borderColor="rgb(8, 8, 8)";a.data.datasets[0].borderWidth=0.55;a.data.datasets[0].borderCapStyle="butt";a.data.datasets[0].borderDash=[2,3];a.data.datasets[0].borderDashOffset=7;a.data.datasets[0].borderJoinStyle="miter";a.data.datasets[0].fill=false;a.data.datasets[0].pointRadius=22;a.data.datasets[0].hitRadius=3.3;a.data.datasets[0].pointBackgroundColor="rgb(128, 129, 130)";a.data.datasets[0].pointBorderColor="rgb(56, 57, 58)";a.data.datasets[0].pointBorderWidth=1.123;b.controller.update();expect(b.dataset._model.scaleTop).toBeCloseToPixel(32);expect(b.dataset._model.scaleBottom).toBeCloseToPixel(512);expect(b.dataset._model.scaleZero.x).toBeCloseToPixel(256);expect(b.dataset._model.scaleZero.y).toBeCloseToPixel(272);expect(b.dataset._model).toEqual(jasmine.objectContaining({backgroundColor:"rgb(98, 98, 98)",borderCapStyle:"butt",borderColor:"rgb(8, 8, 8)",borderDash:[2,3],borderDashOffset:7,borderJoinStyle:"miter",borderWidth:0.55,fill:false,tension:0,}));[{x:256,y:133},{x:464,y:272},{x:256,y:272},{x:200,y:272},].forEach(function(d,c){expect(b.data[c]._model.x).toBeCloseToPixel(d.x);expect(b.data[c]._model.y).toBeCloseToPixel(d.y);expect(b.data[c]._model).toEqual(jasmine.objectContaining({backgroundColor:"rgb(128, 129, 130)",borderWidth:1.123,borderColor:"rgb(56, 57, 58)",hitRadius:3.3,radius:22,pointStyle:"circle",skip:false,tension:0,}))});b.dataset.custom={tension:0.25,backgroundColor:"rgb(55, 55, 54)",borderColor:"rgb(8, 7, 6)",borderWidth:0.3,borderCapStyle:"square",borderDash:[4,3],borderDashOffset:4.4,borderJoinStyle:"round",fill:true,};b.data[0].custom={radius:2.2,backgroundColor:"rgb(0, 1, 3)",borderColor:"rgb(4, 6, 8)",borderWidth:0.787,tension:0.15,skip:true,hitRadius:5,};b.controller.update();expect(b.dataset._model.scaleTop).toBeCloseToPixel(32);expect(b.dataset._model.scaleBottom).toBeCloseToPixel(512);expect(b.dataset._model.scaleZero.x).toBeCloseToPixel(256);expect(b.dataset._model.scaleZero.y).toBeCloseToPixel(272);expect(b.dataset._model).toEqual(jasmine.objectContaining({backgroundColor:"rgb(55, 55, 54)",borderCapStyle:"square",borderColor:"rgb(8, 7, 6)",borderDash:[4,3],borderDashOffset:4.4,borderJoinStyle:"round",borderWidth:0.3,fill:true,tension:0.25,}));expect(b.data[0]._model.x).toBeCloseToPixel(256);expect(b.data[0]._model.y).toBeCloseToPixel(133);expect(b.data[0]._model.controlPointPreviousX).toBeCloseToPixel(241);expect(b.data[0]._model.controlPointPreviousY).toBeCloseToPixel(133);expect(b.data[0]._model.controlPointNextX).toBeCloseToPixel(281);expect(b.data[0]._model.controlPointNextY).toBeCloseToPixel(133);expect(b.data[0]._model).toEqual(jasmine.objectContaining({radius:2.2,backgroundColor:"rgb(0, 1, 3)",borderColor:"rgb(4, 6, 8)",borderWidth:0.787,tension:0.15,skip:true,hitRadius:5,}))});it("should set point hover styles",function(){var b=window.acquireChart({type:"radar",data:{datasets:[{data:[10,15,0,4]}],labels:["label1","label2","label3","label4"]},options:{showLines:true,elements:{line:{backgroundColor:"rgb(255, 0, 0)",borderCapStyle:"round",borderColor:"rgb(0, 255, 0)",borderDash:[],borderDashOffset:0.1,borderJoinStyle:"bevel",borderWidth:1.2,fill:true,skipNull:true,tension:0.1,},point:{backgroundColor:"rgb(255, 255, 0)",borderWidth:1,borderColor:"rgb(255, 255, 255)",hitRadius:1,hoverRadius:4,hoverBorderWidth:1,radius:3,}}}});var c=b.getDatasetMeta(0);c.controller.update();var a=c.data[0];c.controller.setHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(229, 230, 0)");expect(a._model.borderColor).toBe("rgb(230, 230, 230)");expect(a._model.borderWidth).toBe(1);expect(a._model.radius).toBe(4);b.data.datasets[0].pointHoverRadius=3.3;b.data.datasets[0].pointHoverBackgroundColor="rgb(77, 79, 81)";b.data.datasets[0].pointHoverBorderColor="rgb(123, 125, 127)";b.data.datasets[0].pointHoverBorderWidth=2.1;c.controller.setHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(77, 79, 81)");expect(a._model.borderColor).toBe("rgb(123, 125, 127)");expect(a._model.borderWidth).toBe(2.1);expect(a._model.radius).toBe(3.3);a.custom={hoverRadius:4.4,hoverBorderWidth:5.5,hoverBackgroundColor:"rgb(0, 0, 0)",hoverBorderColor:"rgb(10, 10, 10)"};c.controller.setHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(0, 0, 0)");expect(a._model.borderColor).toBe("rgb(10, 10, 10)");expect(a._model.borderWidth).toBe(5.5);expect(a._model.radius).toBe(4.4)});it("should remove hover styles",function(){var b=window.acquireChart({type:"radar",data:{datasets:[{data:[10,15,0,4]}],labels:["label1","label2","label3","label4"]},options:{showLines:true,elements:{line:{backgroundColor:"rgb(255, 0, 0)",borderCapStyle:"round",borderColor:"rgb(0, 255, 0)",borderDash:[],borderDashOffset:0.1,borderJoinStyle:"bevel",borderWidth:1.2,fill:true,skipNull:true,tension:0.1,},point:{backgroundColor:"rgb(255, 255, 0)",borderWidth:1,borderColor:"rgb(255, 255, 255)",hitRadius:1,hoverRadius:4,hoverBorderWidth:1,radius:3,}}}});var c=b.getDatasetMeta(0);c.controller.update();var a=c.data[0];b.options.elements.point.backgroundColor="rgb(45, 46, 47)";b.options.elements.point.borderColor="rgb(50, 51, 52)";b.options.elements.point.borderWidth=10.1;b.options.elements.point.radius=1.01;c.controller.removeHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(45, 46, 47)");expect(a._model.borderColor).toBe("rgb(50, 51, 52)");expect(a._model.borderWidth).toBe(10.1);expect(a._model.radius).toBe(1.01);b.data.datasets[0].radius=3.3;b.data.datasets[0].pointBackgroundColor="rgb(77, 79, 81)";b.data.datasets[0].pointBorderColor="rgb(123, 125, 127)";b.data.datasets[0].pointBorderWidth=2.1;c.controller.removeHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(77, 79, 81)");expect(a._model.borderColor).toBe("rgb(123, 125, 127)");expect(a._model.borderWidth).toBe(2.1);expect(a._model.radius).toBe(3.3);a.custom={radius:4.4,borderWidth:5.5,backgroundColor:"rgb(0, 0, 0)",borderColor:"rgb(10, 10, 10)"};c.controller.removeHoverStyle(a);expect(a._model.backgroundColor).toBe("rgb(0, 0, 0)");expect(a._model.borderColor).toBe("rgb(10, 10, 10)");expect(a._model.borderWidth).toBe(5.5);expect(a._model.radius).toBe(4.4)})});