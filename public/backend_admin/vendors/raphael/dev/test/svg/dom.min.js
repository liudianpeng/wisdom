(function(){var d,a="http://raphaeljs.com";module("DOM",{setup:function(){d=new Raphael(document.getElementById("qunit-fixture"),1000,1000)},teardown:function(){d.remove()}});var b=function(g,f,h,e){equal(g.parentNode,f);equal(g.previousSibling,h);equal(g.nextSibling,e)};var c=function(h,g,f,i,e){equal(h.parentNode,g);b(g,f,i,e)};test("insertBefore: no element",function(){var e=d.rect();e.insertBefore(null);b(e.node,d.canvas,d.defs,null)});test("insertBefore: first element",function(){var e=d.rect();var f=d.rect();f.insertBefore(e);b(f.node,d.canvas,d.defs,e.node)});test("insertBefore: middle element",function(){var e=d.rect();var g=d.rect();var f=d.rect();f.insertBefore(g);b(f.node,d.canvas,e.node,g.node)});test("insertBefore: no element when wrapped in <a>",function(){var f=d.rect().attr("href",a),e=f.node.parentNode;f.insertBefore(null);c(f.node,e,d.canvas,d.defs,null)});test("insertBefore: first element when wrapped in <a>",function(){var e=d.rect();var g=d.rect().attr("href",a),f=g.node.parentNode;g.insertBefore(e);c(g.node,f,d.canvas,d.defs,e.node)});test("insertBefore: first element wrapped in <a> and wrapped in <a>",function(){var e=d.rect().attr("href",a),h=e.node.parentNode;var g=d.rect().attr("href",a),f=g.node.parentNode;g.insertBefore(e);c(g.node,f,d.canvas,d.defs,h)});test("insertBefore: middle element when wrapped in <a>",function(){var e=d.rect();var h=d.rect();var g=d.rect().attr("href",a),f=g.node.parentNode;g.insertBefore(h);c(g.node,f,d.canvas,e.node,h.node)});test("insertBefore: middle element wrapped in <a> and wrapped in <a>",function(){var e=d.rect().attr("href",a),j=e.node.parentNode;var i=d.rect().attr("href",a),f=i.node.parentNode;var h=d.rect().attr("href",a),g=h.node.parentNode;h.insertBefore(i);c(h.node,g,d.canvas,j,f)});test("insertAfter: no element",function(){var e=d.rect();e.insertAfter(null);b(e.node,d.canvas,d.defs,null)});test("insertAfter: last element",function(){var e=d.rect();var f=d.rect();f.insertAfter(e);b(f.node,d.canvas,e.node,null)});test("insertAfter: middle element",function(){var e=d.rect();var g=d.rect();var f=d.rect();f.insertAfter(e);b(f.node,d.canvas,e.node,g.node)});test("insertAfter: no element when wrapped in <a>",function(){var f=d.rect().attr("href",a),e=f.node.parentNode;f.insertAfter(null);c(f.node,e,d.canvas,d.defs,null)});test("insertAfter: last element when wrapped in <a>",function(){var e=d.rect();var g=d.rect().attr("href",a),f=g.node.parentNode;g.insertAfter(e);c(g.node,f,d.canvas,e.node,null)});test("insertAfter: last element wrapped in <a> and wrapped in <a>",function(){var e=d.rect().attr("href",a),h=e.node.parentNode;var g=d.rect().attr("href",a),f=g.node.parentNode;g.insertAfter(e);c(g.node,f,d.canvas,h,null)});test("insertAfter: middle element when wrapped in <a>",function(){var e=d.rect();var h=d.rect();var g=d.rect().attr("href",a),f=g.node.parentNode;g.insertAfter(e);c(g.node,f,d.canvas,e.node,h.node)});test("insertAfter: middle element wrapped in <a> and wrapped in <a>",function(){var e=d.rect().attr("href",a),j=e.node.parentNode;var i=d.rect().attr("href",a),f=i.node.parentNode;var h=d.rect().attr("href",a),g=h.node.parentNode;h.insertAfter(e);c(h.node,g,d.canvas,j,f)});test("remove: after added",function(){var e=d.rect(),f=e.node;e.remove();equal(e.node,null);equal(f.parentNode,null)});test("remove: when wrapped in <a>",function(){var f=d.rect().attr("href",a),g=f.node,e=g.parentNode;f.remove();equal(f.node,null);equal(g.parentNode,e);equal(e.parentNode,null)});test("remove: when already removed",function(){var e=d.rect(),f=e.node;e.remove();e.remove();equal(e.node,null);equal(f.parentNode,null)});test("remove: when the canvas is removed",function(){var e=d.rect(),f=e.node;d.remove();e.remove();equal(e.node,null);equal(f.parentNode,null)});test("toFront: normal",function(){var f=d.rect();var e=d.rect();f.toFront();b(f.node,d.canvas,e.node,null)});test("toFront: when wrapped in <a>",function(){var g=d.rect().attr("href",a),f=g.node.parentNode;var e=d.rect();g.toFront();c(g.node,f,d.canvas,e.node,null)});test("toBack: normal",function(){var e=d.rect();var f=d.rect();f.toBack();b(f.node,d.canvas,null,d.desc);b(e.node,d.canvas,d.defs,null)});test("toBack: when wrapped in <a>",function(){var e=d.rect();var g=d.rect().attr("href",a),f=g.node.parentNode;g.toBack();c(g.node,f,d.canvas,null,d.desc);b(e.node,d.canvas,d.defs,null)})})();