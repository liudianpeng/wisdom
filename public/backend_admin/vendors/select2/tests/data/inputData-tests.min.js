module("Data adapters - <input> compatibility");var $=require("jquery");var Options=require("select2/options");var Utils=require("select2/utils");var ArrayData=require("select2/data/array");var InputData=require("select2/compat/inputData");var InputAdapter=Utils.Decorate(ArrayData,InputData);test("test that options can be selected",function(c){var d=new Options({data:[{id:"test",text:"Test"}]});var b=$("<input />");var a=new InputAdapter(b,d);a.select({id:"test"});c.equal(b.val(),"test","The id of the item should be the value")});test("unselect the single selected option clears the value",function(c){var d=new Options({data:[{id:"test",text:"Test",selected:true}]});var b=$("<input />");var a=new InputAdapter(b,d);a.unselect({id:"test"});c.equal(b.val(),"","The id should no longer be in the value")});test("options can be unselected individually",function(c){var d=new Options({data:[{id:"test",text:"Test"},{id:"test2",text:"Test2"},{id:"test3",text:"Test3"}]});var b=$("<input />");b.val("test,test2,test3");var a=new InputAdapter(b,d);a.unselect({id:"test2"});c.equal(b.val(),"test,test3","The value should contain all the still selected options")});test("default values can be set",function(c){c.expect(4);var d=new Options({data:[{id:"test",text:"Test"}]});var b=$('<input value="test" />');var a=new InputAdapter(b,d);a.current(function(f){c.equal(f.length,1,"There should only be a single selected option");var e=f[0];c.equal(e.id,"test");c.equal(e.text,"Test")});c.equal(b.val(),"test","The value should not have been altered")});test("no default value",function(c){c.expect(2);var d=new Options({data:[{id:"test",text:"Test"}]});var b=$("<input />");var a=new InputAdapter(b,d);a.current(function(e){c.equal(e.length,0,"There should be no selected options")});c.equal(b.val(),"","The value should not have been altered")});