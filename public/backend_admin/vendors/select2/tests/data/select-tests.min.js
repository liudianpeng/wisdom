module("Data adapters - Select - current");var SelectData=require("select2/data/select");var $=require("jquery");var Options=require("select2/options");var selectOptions=new Options({});test("current gets default for single",function(a){var b=$("#qunit-fixture .single");var c=new SelectData(b,selectOptions);c.current(function(e){a.equal(e.length,1,"There should only be one selected option");var d=e[0];a.equal(d.id,"One","The value of the option tag should be the id");a.equal(d.text,"One","The text within the option tag should be the text")})});test("current gets default for multiple",function(a){var b=$("#qunit-fixture .multiple");var c=new SelectData(b,selectOptions);c.current(function(d){a.equal(d.length,0,"Multiple selects have no default selection.")})});test("current gets options with explicit value",function(a){var b=$("#qunit-fixture .single");var d=$('<option value="1">One</option>');b.append(d);var c=new SelectData(b,selectOptions);b.val("1");c.current(function(f){a.equal(f.length,1,"There should be one selected option");var e=f[0];a.equal(e.id,"1","The option value should be the selected id");a.equal(e.text,"One","The text should match the text for the option tag")})});test("current gets options with implicit value",function(a){var b=$("#qunit-fixture .single");var c=new SelectData(b,selectOptions);b.val("One");c.current(function(e){a.equal(e.length,1,"There should only be one selected value");var d=e[0];a.equal(d.id,"One","The id should be the same as the option text");a.equal(d.text,"One","The text should be the same as the option text")})});test("select works for single",function(a){var b=$("#qunit-fixture .single-with-placeholder");var c=new SelectData(b,selectOptions);a.equal(b.val(),"placeholder");c.select({id:"One",text:"One"});a.equal(b.val(),"One")});test("multiple sets the value",function(a){var b=$("#qunit-fixture .multiple");var c=new SelectData(b,selectOptions);a.equal(b.val(),null);c.select({id:"Two",text:"Two"});a.deepEqual(b.val(),["Two"])});test("multiple adds to the old value",function(a){var b=$("#qunit-fixture .multiple");var c=new SelectData(b,selectOptions);b.val(["Two"]);a.deepEqual(b.val(),["Two"]);c.select({id:"One",text:"One"});a.deepEqual(b.val(),["One","Two"])});test("duplicates - single - same id on select triggers change",function(a){var c=$("#qunit-fixture .duplicates");var e=new SelectData(c,e);var b=$("#qunit-fixture .duplicates option")[2];var d=false;a.equal(c.val(),"one");c.on("change",function(){d=true});e.select({id:"one",text:"Uno",element:b});a.equal(c.val(),"one","The value never changed");a.ok(d,"The change event should be triggered");a.ok(b.selected,"The second duplicate is selected, not the first")});test("duplicates - single - different id on select triggers change",function(a){var c=$("#qunit-fixture .duplicates");var e=new SelectData(c,e);var b=$("#qunit-fixture .duplicates option")[2];var d=false;c.val("two");c.on("change",function(){d=true});e.select({id:"one",text:"Uno",element:b});a.equal(c.val(),"one","The value changed to the duplicate id");a.ok(d,"The change event should be triggered");a.ok(b.selected,"The second duplicate is selected, not the first")});test("duplicates - multiple - same id on select triggers change",function(a){var c=$("#qunit-fixture .duplicates-multi");var e=new SelectData(c,e);var b=$("#qunit-fixture .duplicates-multi option")[2];var d=false;c.val(["one"]);c.on("change",function(){d=true});e.select({id:"one",text:"Uno",element:b});a.deepEqual(c.val(),["one","one"],"The value now has duplicates");a.ok(d,"The change event should be triggered");a.ok(b.selected,"The second duplicate is selected, not the first")});test("duplicates - multiple - different id on select triggers change",function(a){var c=$("#qunit-fixture .duplicates-multi");var e=new SelectData(c,e);var b=$("#qunit-fixture .duplicates-multi option")[2];var d=false;c.val(["two"]);c.on("change",function(){d=true});e.select({id:"one",text:"Uno",element:b});a.deepEqual(c.val(),["two","one"],"The value has the new id");a.ok(d,"The change event should be triggered");a.ok(b.selected,"The second duplicate is selected, not the first")});module("Data adapter - Select - query");test("all options are returned with no term",function(a){var b=$("#qunit-fixture .single");var c=new SelectData(b,selectOptions);c.query({},function(d){a.equal(d.results.length,1,"The number of items returned should be equal to the number of options")})});test("the matcher checks the text",function(a){var b=$("#qunit-fixture .single");var c=new SelectData(b,selectOptions);c.query({term:"One"},function(d){a.equal(d.results.length,1,'Only the "One" option should be found')})});test("the matcher ignores case",function(a){var b=$("#qunit-fixture .single");var c=new SelectData(b,selectOptions);c.query({term:"one"},function(d){a.equal(d.results.length,1,'The "One" option should still be found')})});test("no options may be returned with no matches",function(a){var b=$("#qunit-fixture .single");var c=new SelectData(b,selectOptions);c.query({term:"qwerty"},function(d){a.equal(d.results.length,0,"Only matching items should be returned")})});test("optgroup tags are marked with children",function(a){var b=$("#qunit-fixture .groups");var c=new SelectData(b,selectOptions);c.query({},function(d){a.ok("children" in d.results[0],"The optgroup element should have children when queried")})});test("empty optgroups are still shown when queried",function(a){var b=$("#qunit-fixture .groups");var c=new SelectData(b,selectOptions);c.query({},function(e){a.equal(e.results.length,2,"The empty optgroup element should still be returned when queried");var d=e.results[1];a.equal(d.text,"Empty","The text of the empty optgroup should match the label");a.equal(d.children.length,0,"There should be no children in the empty opgroup")})});test("multiple options with the same value are returned",function(a){var b=$("#qunit-fixture .duplicates");var c=new SelectData(b,selectOptions);c.query({},function(d){a.equal(d.results.length,3,"The duplicate option should still be returned when queried");var f=d.results[0];var e=d.results[2];a.equal(f.id,e.id,"The duplicates should have the same id");a.notEqual(f.text,e.text,"The duplicates do not have the same text")})});test("data objects use the text of the option",function(a){var b=$("#qunit-fixture .duplicates");var d=new SelectData(b,selectOptions);var e=$("<option>&amp;</option>");var c=d.item(e);a.equal(c.id,"&");a.equal(c.text,"&")});