module("Data adapters - Array");var ArrayData=require("select2/data/array");var $=require("jquery");var Options=require("select2/options");var arrayOptions=new Options({data:[{id:"default",text:"Default"},{id:"1",text:"One"},{id:"2",text:"2"}]});var extraOptions=new Options({data:[{id:"default",text:"Default",extra:true},{id:"One",text:"One",extra:true}]});var nestedOptions=new Options({data:[{text:"Default",children:[{text:"Next",children:[{id:"a",text:"Option"}]}]}]});test("current gets default for single",function(a){var b=$("#qunit-fixture .single-empty");var c=new ArrayData(b,arrayOptions);c.current(function(e){a.equal(e.length,1,"There should always be a selected item for array data.");var d=e[0];a.equal(d.id,"default","The first item should be selected")})});test("current gets default for multiple",function(a){var b=$("#qunit-fixture .multiple");var c=new ArrayData(b,arrayOptions);c.current(function(d){a.equal(d.length,0,"There should be no default selection.")})});test("current works with existing selections",function(a){var b=$("#qunit-fixture .multiple");var c=new ArrayData(b,arrayOptions);b.val(["One"]);c.current(function(e){a.equal(e.length,1,"There should only be one existing selection.");var d=e[0];a.equal(d.id,"One","The id should be equal to the value of the option tag.");a.equal(d.text,"One","The text should be equal to the text of the option tag.")})});test("current works with selected data",function(a){var b=$("#qunit-fixture .single-empty");var c=new ArrayData(b,arrayOptions);c.select({id:"2",text:"2"});c.current(function(e){a.equal(e.length,1,"There should only be one option selected.");var d=e[0];a.equal(d.id,"2","The id should match the original id from the array.");a.equal(d.text,"2","The text should match the original text from the array.")})});test("select works for single",function(a){var b=$("#qunit-fixture .single-empty");var c=new ArrayData(b,arrayOptions);a.equal(b.val(),"default","There should already be a selection");c.select({id:"1",text:"One"});a.equal(b.val(),"1","The selected value should be the same as the selected id")});test("multiple sets the value",function(a){var b=$("#qunit-fixture .multiple");var c=new ArrayData(b,arrayOptions);a.equal(b.val(),null);c.select({id:"default",text:"Default"});a.deepEqual(b.val(),["default"])});test("multiple adds to the old value",function(a){var b=$("#qunit-fixture .multiple");var c=new ArrayData(b,arrayOptions);b.val(["One"]);a.deepEqual(b.val(),["One"]);c.select({id:"default",text:"Default"});a.deepEqual(b.val(),["One","default"])});test("option tags are automatically generated",function(a){var b=$("#qunit-fixture .single-empty");var c=new ArrayData(b,arrayOptions);a.equal(b.find("option").length,3,"An <option> element should be created for each object")});test("option tags can receive new data",function(a){var b=$("#qunit-fixture .single");var c=new ArrayData(b,extraOptions);a.equal(b.find("option").length,2,"Only one more <option> element should be created");c.select({id:"default"});a.ok(b.find(":selected").data("data").extra,"<option> default should have new data");c.select({id:"One"});a.ok(b.find(":selected").data("data").extra,"<option> One should have new data")});test("optgroup tags can also be generated",function(a){var b=$("#qunit-fixture .single-empty");var c=new ArrayData(b,nestedOptions);a.equal(b.find("option").length,1,"An <option> element should be created for the one selectable object");a.equal(b.find("optgroup").length,2,"An <optgroup> element should be created for the two with children")});test("optgroup tags have the right properties",function(a){var b=$("#qunit-fixture .single-empty");var d=new ArrayData(b,nestedOptions);var c=b.children("optgroup");a.equal(c.prop("label"),"Default","An `<optgroup>` label should match the text property");a.equal(c.children().length,1,"The <optgroup> should have one child under it")});test("existing selections are respected on initialization",function(a){var c=$("<select><option>First</option><option selected>Second</option></select>");var b=new Options({data:[{id:"Second",text:"Second"},{id:"Third",text:"Third"}]});a.equal(c.val(),"Second");var d=new ArrayData(c,b);a.equal(c.val(),"Second")});