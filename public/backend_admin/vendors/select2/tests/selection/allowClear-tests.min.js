module("Selection containers - Placeholders - Allow clear");var Placeholder=require("select2/selection/placeholder");var AllowClear=require("select2/selection/allowClear");var SingleSelection=require("select2/selection/single");var $=require("jquery");var Options=require("select2/options");var Utils=require("select2/utils");var AllowClearPlaceholder=Utils.Decorate(Utils.Decorate(SingleSelection,Placeholder),AllowClear);var allowClearOptions=new Options({placeholder:{id:"placeholder",text:"This is the placeholder"},allowClear:true});test("clear is not displayed for single placeholder",function(b){var c=new AllowClearPlaceholder($("#qunit-fixture .single-with-placeholder"),allowClearOptions);var a=c.render();c.update([{id:"placeholder"}]);b.equal(a.find(".select2-selection__clear").length,0,"The clear icon should not be displayed")});test("clear is not displayed for multiple placeholder",function(b){var c=new AllowClearPlaceholder($("#qunit-fixture .single-with-placeholder"),allowClearOptions);var a=c.render();c.update([]);b.equal(a.find(".select2-selection__clear").length,0,"The clear icon should not be displayed")});test("clear is displayed for placeholder",function(b){var c=new AllowClearPlaceholder($("#qunit-fixture .single-with-placeholder"),allowClearOptions);var a=c.render();c.update([{id:"one",test:"one"}]);b.equal(a.find(".select2-selection__clear").length,1,"The clear icon should be displayed")});test("clicking clear will set the placeholder value",function(d){var c=$("#qunit-fixture .single-with-placeholder");var f=new AllowClearPlaceholder(c,allowClearOptions);var b=new MockContainer();var a=f.render();f.bind(b,$("<div></div"));c.val("One");f.update([{id:"One",text:"One"}]);var e=a.find(".select2-selection__clear");e.trigger("mousedown");d.equal(c.val(),"placeholder","The value should have been reset to the placeholder")});test("clicking clear will trigger the unselect event",function(d){d.expect(3);var c=$("#qunit-fixture .single-with-placeholder");var f=new AllowClearPlaceholder(c,allowClearOptions);var b=new MockContainer();var a=f.render();f.bind(b,$("<div></div"));c.val("One");f.update([{id:"One",text:"One"}]);f.on("unselect",function(g){d.ok("data" in g&&g.data,"The event should have been triggered with the data property");d.ok($.isPlainObject(g.data),"The data should be an object");d.equal(g.data.id,"One","The previous object should be unselected")});var e=a.find(".select2-selection__clear");e.trigger("mousedown")});test("preventing the unselect event cancels the clearing",function(d){var c=$("#qunit-fixture .single-with-placeholder");var f=new AllowClearPlaceholder(c,allowClearOptions);var b=new MockContainer();var a=f.render();f.bind(b,$("<div></div"));c.val("One");f.update([{id:"One",text:"One"}]);f.on("unselect",function(g){g.prevented=true});var e=a.find(".select2-selection__clear");e.trigger("mousedown");d.equal(c.val(),"One","The placeholder should not have been set")});test("clear does not work when disabled",function(d){var c=$("#qunit-fixture .single-with-placeholder");var f=new AllowClearPlaceholder(c,allowClearOptions);var b=new MockContainer();var a=f.render();f.bind(b,$("<div></div"));f.update([{id:"One",text:"One"}]);c.val("One");f.options.set("disabled",true);var e=a.find(".select2-selection__clear");e.trigger("mousedown");d.equal(c.val(),"One","The placeholder should not have been set")});