/*
* jquery.inputmask.min.js
* https://github.com/RobinHerbots/jquery.inputmask
* Copyright (c) 2010 - 2016 Robin Herbots
* Licensed under the MIT license (http://www.opensource.org/licenses/mit-license.php)
* Version: 3.3.1
*/
!function(b){"function"==typeof define&&define.amd?define(["jquery","inputmask"],b):"object"==typeof exports?module.exports=b(require("jquery"),require("./inputmask")):b(jQuery,window.Inputmask)}(function(d,c){return void 0===d.fn.inputmask&&(d.fn.inputmask=function(h,g){var b,a=this[0];if(void 0===g&&(g={}),"string"==typeof h){switch(h){case"unmaskedvalue":return a&&a.inputmask?a.inputmask.unmaskedvalue():d(a).val();case"remove":return this.each(function(){this.inputmask&&this.inputmask.remove()});case"getemptymask":return a&&a.inputmask?a.inputmask.getemptymask():"";case"hasMaskedValue":return a&&a.inputmask?a.inputmask.hasMaskedValue():!1;case"isComplete":return a&&a.inputmask?a.inputmask.isComplete():!0;case"getmetadata":return a&&a.inputmask?a.inputmask.getmetadata():void 0;case"setvalue":d(a).val(g),a&&void 0!==a.inputmask&&d(a).triggerHandler("setvalue");break;case"option":if("string"!=typeof g){return this.each(function(){return void 0!==this.inputmask?this.inputmask.option(g):void 0})}if(a&&void 0!==a.inputmask){return a.inputmask.option(g)}break;default:return g.alias=h,b=new c(g),this.each(function(){b.mask(this)})}}else{if("object"==typeof h){return b=new c(h),void 0===h.mask&&void 0===h.alias?this.each(function(){return void 0!==this.inputmask?this.inputmask.option(h):void b.mask(this)}):this.each(function(){b.mask(this)})}if(void 0===h){return this.each(function(){b=new c(g),b.mask(this)})}}}),d.fn.inputmask});